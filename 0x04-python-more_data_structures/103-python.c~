#include <Python.h>

/**
 * print_python_list - Prints some basic info about Python lists
 * @p: A pointer to a Python object
 */
void print_python_list(PyObject *p)
{
    Py_ssize_t size, i;
    PyObject *item;

    printf("[*] Python list info\n");
    if (!PyList_Check(p))
    {
        printf("  [ERROR] Invalid List Object\n");
        return;
    }
    size = PyList_Size(p);
    printf("[*] Size of the Python List = %ld\n", size);
    printf("[*] Allocated = %ld\n", ((PyListObject *)p)->allocated);
    for (i = 0; i < size; i++)
    {
        item = PyList_GET_ITEM(p, i);
        printf("Element %ld: %s\n", i, Py_TYPE(item)->tp_name);
    }
}

/**
 * print_python_bytes - Prints some basic info about Python bytes objects
 * @p: A pointer to a Python object
 */
void print_python_bytes(PyObject *p)
{
    Py_ssize_t size, i;
    char *buffer;

    printf("[.] bytes object info\n");
    if (!PyBytes_Check(p))
    {
        printf("  [ERROR] Invalid Bytes Object\n");
        return;
    }
    size = PyBytes_GET_SIZE(p);
    buffer = PyBytes_AS_STRING(p);
    printf("  size: %ld\n", size);
    printf("  trying string: %s\n", buffer);
    if (size < 10)
        printf("  first %ld bytes: ", size + 1);
    else
        printf("  first 10 bytes: ");
    for (i = 0; i <= size && i < 10; i++)
    {
        printf("%02hhx", buffer[i]);
        if (i < size && i < 9)
            printf(" ");
    }
    printf("\n");
}
